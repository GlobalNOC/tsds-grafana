{"version":3,"sources":["../src/datasource.js"],"names":["_","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","basicAuth","withCredentials","selectMenu","metricValue","metricColumn","whereSuggest","options","query","buildQueryParameters","targets","filter","t","hide","length","when","data","datasourceRequest","method","headers","Authorization","self","then","response","status","message","title","replace","annotation","annotationQuery","range","datasource","enable","iconColor","rangeRaw","payload","result","target","interpolated","mapToTextValue","metric","series","console","log","parentIndex","index","like_field","callback","whereClauseGroup","whereList","flag","meta_field","parent_meta_field","parent_meta_field_value","i","left","right","mapToArray","timeFrom","timeTo","DB_title","drill","drillDownValue","Data_source","alias","drillDownAlias","graph_type","Promise","resolve","reject","a","map","d","text","value","isObject","variableExists","scopevar","scopedVars","rawQuery","oldQ","substr","indexOf","formatQ","seriesName","metric_array","metricValues_array","bucketValue","aggregator","percentileValue","groupby_field","outerGroupOperator","j","inlineGroupOperator","op","bind","refId","target_alias"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.basicAuth = instanceSettings.basicAuth;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.selectMenu = ['=','>','<'];\n    this.metricValue = this.metricValue||[];\n    this.metricColumn =this.metricColumn||[];\n    this.whereSuggest =[];\n  }\n\n  query(options) {\n    var query = this.buildQueryParameters(options, this);\n    query.targets = query.targets.filter(t => !t.hide);\n    if (query.targets.length <= 0) {\n      return this.q.when({data: []});\n    }\n\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/query',\n      data: query,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n\n  testDatasource() {\n    var options = {\n      url: this.url + '/test',\n      method: 'GET'\n    };\n\n    if (this.basicAuth || this.withCredentials) {\n      options.withCredentials = true;\n    }\n    if (this.basicAuth) {\n      options.headers.Authorization = self.basicAuth;\n    }\n\n    return this.backendSrv.datasourceRequest(options).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n    var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n    var annotationQuery = {\n      range: options.range,\n      annotation: {\n        name: options.annotation.name,\n        datasource: options.annotation.datasource,\n        enable: options.annotation.enable,\n        iconColor: options.annotation.iconColor,\n        query: query\n      },\n      rangeRaw: options.rangeRaw\n    };\n\n    var payload = {\n      url: this.url + '/annotations',\n      method: 'POST',\n      data: annotationQuery\n    };\n    if (this.basicAuth || this.withCredentials) {\n      payload.withCredentials = true;\n    }\n    if (this.basicAuth) {\n      payload.headers.Authorization = self.basicAuth;\n    }\n\n    return this.backendSrv.datasourceRequest(payload).then(result => {\n      return result.data;\n    });\n  }\n\n   metricFindQuery(options) {\n    var target = typeof (options) === \"string\" ? options : options.target;\n    var interpolated = {\n        target: this.templateSrv.replace(target, null, 'regex'),\n\ttype:\"Search\"\n    };\n\n    var payload = {\n      url: this.url + '/search',\n      data: interpolated,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    };\n    if (this.basicAuth || this.withCredentials) {\n      payload.withCredentials = true;\n    }\n    if (this.basicAuth) {\n      payload.headers.Authorization = self.basicAuth;\n    }\n\n    return this.backendSrv.datasourceRequest(payload).then(this.mapToTextValue);\n  }\n  metricFindTables(options) {\n    var target = typeof (options) === \"string\" ? options : \"Find tables\";\n    var interpolated = {\n        target: this.templateSrv.replace(target, null, 'regex'),\n\ttype: \"Table\"\n    };\n\n    var payload = {\n      url: this.url + '/search',\n      data: interpolated,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    };\n    if (this.basicAuth || this.withCredentials) {\n      payload.withCredentials = true;\n    }\n    if (this.basicAuth) {\n      payload.headers.Authorization = self.basicAuth;\n    }\n\n    return  this.backendSrv.datasourceRequest(payload).then(this.mapToTextValue);\n  }\n\n  findMetric(options, metric) {\n    var target = typeof (options) === \"string\" ? options : options.series;\n    var interpolated = {\n        target: this.templateSrv.replace(target, null, 'regex'),\n\ttype:metric\n    };\n    console.log(interpolated);\n\n    var payload = {\n      url: this.url + '/search',\n      data: interpolated,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    };\n    if (this.basicAuth || this.withCredentials) {\n      payload.withCredentials = true;\n    }\n    if (this.basicAuth) {\n      payload.headers.Authorization = self.basicAuth;\n    }\n\n    return this.backendSrv.datasourceRequest(payload).then(this.mapToTextValue);\n  }\n\n  findWhereFields(options,parentIndex,index, like_field, callback){\n\tvar target = typeof (options) === \"string\" ? options : options.series;\n\tif(options.whereClauseGroup[parentIndex].length >1){\n\t\tvar whereList = options.whereClauseGroup[parentIndex];\n\t\tvar flag = true;\n\t\tvar meta_field = \"\";\n\t\tvar parent_meta_field =\"\";\n\t\tvar parent_meta_field_value=\"\";\n\t\tfor(var i = 0; i<whereList.length && flag; i++){\n\t\t\tif(i != index && typeof whereList[i] != 'undefined'){\n\t\t\t\tmeta_field = whereList[index].left;\n\t\t\t\tparent_meta_field = whereList[i].left;\n\t\t\t\tparent_meta_field_value = whereList[i].right;\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t\tvar interpolated = {\n                target: this.templateSrv.replace(target, null, 'regex'),\n                meta_field: this.templateSrv.replace(meta_field, null, 'regex'),\n                like_field: this.templateSrv.replace(like_field, null, 'regex'),\n\t\tparent_meta_field: this.templateSrv.replace(parent_meta_field, null, 'regex'),\n\t\tparent_meta_field_value: this.templateSrv.replace(parent_meta_field_value, null, 'regex'),\n\t\ttype:\"Where_Related\"\n                };\n\n      var payload = {\n        url: this.url + '/search',\n        data: interpolated,\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' }\n      };\n      if (this.basicAuth || this.withCredentials) {\n        payload.withCredentials = true;\n      }\n      if (this.basicAuth) {\n        payload.headers.Authorization = self.basicAuth;\n      }\n\n\t  return  this.backendSrv.datasourceRequest(payload).then(this.mapToArray).then(callback);\n\t}\n\telse {\n\t\tvar meta_field = options.whereClauseGroup[parentIndex][index].left;\n    \t\tvar interpolated = {\n        \ttarget: this.templateSrv.replace(target, null, 'regex'),\n\t\tmeta_field: this.templateSrv.replace(meta_field, null, 'regex'),\n\t\tlike_field: this.templateSrv.replace(like_field, null, 'regex'),\n\t\ttype:\"Where\"\n    \t\t};\n\n      var payload = {\n        url: this.url + '/search',\n        data: interpolated,\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' }\n      };\n      if (this.basicAuth || this.withCredentials) {\n        payload.withCredentials = true;\n      }\n      if (this.basicAuth) {\n        payload.headers.Authorization = self.basicAuth;\n      }\n\n      return  this.backendSrv.datasourceRequest(payload).then(this.mapToArray).then(callback);\n    }\n }\n\n    generateDashboard(options, timeFrom, timeTo, DB_title, datasource, type) {\n        var target = typeof (options) === \"string\" ? options : options.target\n        var interpolated = {\n            query: this.templateSrv.replace(target, null, 'regex'),\n\t        drill : options.drillDownValue,\n\t        timeFrom : timeFrom,\n\t        timeTo: timeTo,\n\t        DB_title : DB_title,\n\t        Data_source : datasource,\n\t        alias: options.drillDownAlias,\n\t        graph_type : type\n        };\n\n      var payload = {\n        url: this.url + '/dashboard',\n        data: interpolated,\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' }\n      };\n      if (this.basicAuth || this.withCredentials) {\n        payload.withCredentials = true;\n      }\n      if (this.basicAuth) {\n        payload.headers.Authorization = self.basicAuth;\n      }\n\n      return this.backendSrv.datasourceRequest(payload).then(function(){\n\n      });\n    }\n\n    findOperator(){\n\t    return  new Promise(function(resolve, reject) {\n\t\t    var a = {\"data\":['=','<','>'], \"status\":200, \"statusText\":\"OK\"};\n\t        resolve(a);\n\t    }).then(this.mapToTextValue);\n\t}\n\n    mapToTextValue(result) {\n        var a =  _.map(result.data, (d, i) => {\n            if (d && d.text && d.value) {\n                return { text: d.text, value: d.value };\n            } else if (_.isObject(d)) {\n                return { text: d, value: i};\n            }\n            return { text: d, value: d };\n        });\n\t    return a;\n    }\n\n    mapToArray(result){\n\t    if (result.data.length == 0) {\n\t\t    result.data = [\"No results found\"]\n\t    }\n\t    return result.data;\n\t}\n\n    mapToListValue(result) {\n        this.metricValue = result.data;\n        console.log(this.metricValue);\n    }\n \n    targetContainsTemplate(target) {\n        return templateSrv.variableExists(target.target);\n    }\n\n    buildQueryParameters(options, t) {\n        var scopevar = options.scopedVars;\n\t    var query = _.map(options.targets, function(target) {\n\n            // Returns target when not formated as a tsds query\n            // object.\n            if (typeof(target) === \"string\") { return target; }\n\n\t\t    if(target.rawQuery){\n\t\t\t    var query = t.templateSrv.replace(target.target, scopevar);\n\t\t\t    var oldQ = query.substr(query.indexOf(\"{\"), query.length);\n\t\t\t    var formatQ = oldQ.replace(/,/gi, \" or \");\n\n\t\t\t    query = query.replace(oldQ, formatQ);\n\t\t\t    return query;\n\t\t    } else{\n\t\t\t    var query = 'get ';\n\t\t\t    var seriesName = target.series;\n\n\t\t\t    for(var index = 0 ; index < target.metric_array.length; index++){\n\t\t\t\t    query+= ' '+target.metric_array[index];\n\t\t\t\t    if ( index+1 == target.metric_array.length){\n\t\t\t\t\t    break;\n\t\t\t\t    }\n\t\t\t\t    query+=',';\n\t\t\t    }\n\n\t\t\t    for(var index = 0 ; index < target.metricValues_array.length; index++){\n\t\t\t\t    query+= ', aggregate(values.'+target.metricValues_array[index];\n\t\t\t\t    if(typeof target.bucketValue[index] ==='undefined'|| target.bucketValue[index] ==='')  query+=', $quantify, ';\n\t\t\t\t    else query+=', '+target.bucketValue[index]+', ';\n\t\t\t\t    if(target.aggregator[index]==\"percentile\") query+= target.aggregator[index]+'('+target.percentileValue[index]+'))';\n\t\t\t\t    else query+= target.aggregator[index]+')';\n                }\n\t\t\t    query+= ' between ($START,$END)';\n\t\t\t    if (target.groupby_field != \" \") {\n                    query += ' by ' + target.groupby_field;\n                }\n        \t\tquery += ' from ' + seriesName;\n\t\t\t\tquery += \" where \";\n\t\t\t\tfor(var i=0; i<target.whereClauseGroup.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif(i>0) query +=\" \"+ target.outerGroupOperator[i]+\" \";\n\t\t\t\t\tquery +=\" ( \";\n\t\t\t\t\tfor(var j =0 ; j<target.whereClauseGroup[i].length; j++){\n\t\t\t\t\t\tif(j>0) query = query +\" \"+target.inlineGroupOperator[i][j]+\" \";\n                        query += target.whereClauseGroup[i][j].left+\" \"+target.whereClauseGroup[i][j].op+\" \\\"\"+target.whereClauseGroup[i][j].right+\"\\\"\";\n\t\t\t\t\t}\n\t\t\t\t\tquery +=\" )\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t    target.target = query;\n\t\t\t    return query;\n\t\t    }\n\t    }.bind(scopevar));\n\n        var index = 0;\n        var targets = _.map(options.targets, target => {\n            return {\n                target: query[index++],\n                refId: target.refId,\n                hide: target.hide,\n                type: target.type || 'timeserie',\n\t            alias : target.target_alias\n            };\n        });\n        options.targets = targets;\n        return options;\n    }\n}\n"]}